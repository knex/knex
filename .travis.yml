language: node_js
sudo: required

cache:
  directories:
    - 'node_modules'

matrix:
  fast_finish: true
  include:
    - node_js: '12'
      env: DB="mssql mysql mysql2 postgres sqlite3" KNEX_TEST_TIMEOUT=60000
    - node_js: '10'
      env: DB="oracledb mssql mysql mysql2 postgres sqlite3" KNEX_TEST_TIMEOUT=60000
    - node_js: '8'
      env: TESTSCRIPT=test:everything DB="oracledb mssql mysql mysql2 postgres sqlite3" KNEX_TEST_TIMEOUT=60000
install:
  - npm i
  - (echo $DB | grep oracledb) && npm install oracledb@3.1.2 || true

before_script:
  - npm run db:start
  - echo "Install oracle client libs to db container and copy to hosts ~/lib for node oracledb driver..."
  - docker-compose -f scripts/docker-compose.yml exec oracledbxe curl http://yum.oracle.com/public-yum-ol7.repo -o /etc/yum.repos.d/public-yum-ol7.repo
  - docker-compose -f scripts/docker-compose.yml exec oracledbxe yum install -y yum-utils
  - docker-compose -f scripts/docker-compose.yml exec oracledbxe yum-config-manager --enable ol7_oracle_instantclient
  - docker-compose -f scripts/docker-compose.yml exec oracledbxe yum install -y oracle-instantclient18.3-basiclite
  - docker cp oracledbxe_container:/usr/lib/oracle/18.3/client64/lib/ ~/
  - sudo sh -c "echo $HOME/lib > /etc/ld.so.conf.d/oracle-instantclient.conf"
  - sudo ldconfig

script:
  - npm run ${TESTSCRIPT:-test}

after_success:
  - npm run coveralls

notifications:
  email: false

services:
  - docker
